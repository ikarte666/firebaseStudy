{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","attachmentUrl","e","a","window","confirm","doc","id","delete","refFromURL","toggleEditing","prev","onSubmit","preventDefault","update","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","alt","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","MainRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a829fac.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const { attachmentUrl } = nweetObj;\r\n    const onDeleteClick = async (e) => {\r\n        const ok = window.confirm(\r\n            \"Are you sure you want to delete this nweet?\",\r\n        );\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                await storageService\r\n                    .refFromURL(nweetObj.attachmentUrl)\r\n                    .delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n        setNewNweet(nweetObj.text);\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNewNweet(value);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Update Nweet\"\r\n                            className=\"formBtn\"\r\n                        />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} alt=\"thisisanimage\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (e) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\",\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {\r\n            target: { files },\r\n        } = e;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => {\r\n        return setAttachment(\"\");\r\n    };\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"&rarr;\"\r\n                    className=\"factoryInput__arrow\"\r\n                />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"thisisanimage\"\r\n                    />\r\n                    <div\r\n                        className=\"factoryForm__clear\"\r\n                        onClick={onClearAttachment}\r\n                    >\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => {\r\n                return { id: doc.id, ...doc.data() };\r\n            });\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => {\r\n                    return (\r\n                        <Nweet\r\n                            key={nweet.id}\r\n                            nweetObj={nweet}\r\n                            isOwner={nweet.creatorId === userObj.uid}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value },\r\n        } = e;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password,\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password,\r\n                );\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    className=\"authInput\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (e) => {\r\n        const {\r\n            target: { name },\r\n        } = e;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"google\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button\r\n                    onClick={onSocialClick}\r\n                    name=\"github\"\r\n                    className=\"authBtn\"\r\n                >\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul\r\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\r\n        >\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTwitter}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={faUser}\r\n                        color={\"#04AAFF\"}\r\n                        size=\"2x\"\r\n                    />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n    };\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    autoFocus\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst MainRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile\r\n                                userObj={userObj}\r\n                                refreshUser={refreshUser}\r\n                            />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route>\r\n                        <Auth exact path=\"/\" />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport MainRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => {\n                        return user.updateProfile(args);\n                    },\n                });\n            } else {\n                setIsLoggedIn(false);\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => {\n                return user.updateProfile(args);\n            },\n        });\n    };\n\n    return (\n        <>\n            {init ? (\n                <MainRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={isLoggedIn}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n            {/* <footer>&copy; {new Date().getFullYear()}</footer> */}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}